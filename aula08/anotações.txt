// Operadores de comparação/relacionais

// Maior que ( >)	Caso verdadeiro caso o operando da esquerda seja maior que o retorno da direita.	var2 > var1
"12" > 2

// Menor que ( <)	Caso verdadeiro caso o operando da esquerda seja menor que o da direita.	var1 < var2
"12" < "2"

// Maior que ou igual ( >=)	Retorne verdadeiro caso o operando da esquerda maior ou igual à direita.	var2 >= var1
var1 >= 3

// Menor que ou igual ( <=)	Retorne verdadeiro caso o operando da esquerda menor ou igual à direita.	var1 <= var2
var2 <= 5

// Igual ( ==) Retornar verdadeiro caso os operandos sejam iguais.	3 == var1
"3" == var1

// Não igual ( !=)	Retornar verdadeiro caso os operandos não sejam iguais.	var1 != 4
var2 != "3"

//Estritamente igual ( ===)	Retorno verdadeiro caso os operandos sejam iguais e do mesmo tipo.
ex: 5 = '5' False. pois 5 é um número e '5'() entre apóstrofos) é uma STRING


Estritamente não igual ( !==)	Retorna verdadeiro os operandos não são iguais e/ou não são do mesmo tipo.	x==y flasee  x !== y true
3 !== '3'
 Veja também Object.ise igualdade em JS (en-US) .	3 === var1
-----------------------------------------------------

//OPERADORES LÓGICOS

[!] Negação / Não!
[&&] conjunção / e
[||] Dizjunções / OU

Exemplos:
[!] Eu quero uma caneta mas ela NÂO pode ser azul.

[&&] Eu quero uma caneta azul E preta. (só pode ser verdadeiro com os dois resultado azul e preta)

[||] Eu quero uma caneta azul OU preta pode ser verdadeiro se obtiver um resultado azul ou preta.


[!] true => False
    False => true

[&&] true + true => true
     true + False => False
     False + true => False
     False + false => false

[||] true + true => true
     true + False => true
     False + true => true
     False + false => false

Ordem de resolução dos operadores LÓGICOS
1º [!]Negação
2° [&&]E
3º [||] OU

ORDEM DE PRECEDENCIAS

[()] [**] [/]
[<] [>] [>=]
[!]
[&&]
[||]


OPERADOR TERNÁRIO

? :

TEST [?] true [:] False
média >=7.0 [?]"aprovado"[:] "reprovado